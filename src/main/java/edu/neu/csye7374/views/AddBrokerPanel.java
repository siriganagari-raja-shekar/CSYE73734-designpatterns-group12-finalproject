/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.csye7374.views;

import edu.neu.csye7374.Builder.BrokerBuilder;
import edu.neu.csye7374.Broker;
import edu.neu.csye7374.Factory.BrokerFactory;
import edu.neu.csye7374.fileUtil.GeneralFileUtil;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.swing.table.DefaultTableModel;

public class AddBrokerPanel extends javax.swing.JPanel {
    private List<Broker> brokerList = new ArrayList<>();
    private static AddBrokerPanel instance = null;
    private static String EMP_FILE_NAME = "BrokerData.csv";
    /**
     * Creates new form AddBrokerPanel
     */
    public AddBrokerPanel() {
        initComponents();
        loadData();
    }
    
    public static AddBrokerPanel getInstance(){
        if(instance == null){
            instance= new AddBrokerPanel();
        }
        
        return instance;
    }

    private void loadData() {
        List<String> rawData = GeneralFileUtil.readFile(EMP_FILE_NAME);
        for (String line : rawData) {
            BrokerBuilder brokerBuilder = new BrokerBuilder(line);
            brokerList.add(brokerBuilder.build());
        }
        
        populateBrokerTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        BrokerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        empWage = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BrokerCreateButton = new javax.swing.JButton();
        empId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        empFirstName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        empAge = new javax.swing.JTextField();
        empLastName = new javax.swing.JTextField();
        empAgeError = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        BrokerTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
            },
            new String [] {
                "Broker Id", "First Name", "Last Name", "Age", "Wage", "Bonus"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BrokerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BrokerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BrokerTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Wage");

        empWage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empWageActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new Color(204, 0, 0));
        jLabel9.setText("Broker Id");

        BrokerCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BrokerCreateButton.setText("Create");
        BrokerCreateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrokerCreateButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrokerCreateButtonMouseExited(evt);
            }
        });
        BrokerCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrokerCreateButtonActionPerformed(evt);
            }
        });

        empId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empIdActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("First Name");

        empFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empFirstNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Last Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Age");

        empAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empAgeActionPerformed(evt);
            }
        });
        empAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                empAgeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                empAgeKeyReleased(evt);
            }
        });

        empLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empLastNameActionPerformed(evt);
            }
        });

        empAgeError.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                empAgeErrorInputMethodTextChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new Color(204, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Add Brokers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BrokerCreateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(369, 369, 369)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(empFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            // .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                // .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                // .addGap(18, 18, 18)
                                // .addComponent(empId, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(empAgeError)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(empAge, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(empWage, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(293, 293, 293)
                // .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    // .addComponent(empId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    // .addComponent(jLabel9))
                // .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(empLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empWage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(empAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empAgeError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(BrokerCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(275, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BrokerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrokerTableMouseClicked
//        // TODO add your handling code here:
//        if(booksTable.getSelectedRow() != -1){
//            Book book = booksList.get(booksTable.getSelectedRow());
//            apartmentId.setText(book.getId());
//            apartmentAddress.setText(book.getBookName());
//            apartmentPrice.setText(book.getBookAuthor());
//            apartmentMgmt.setText(book.getBookPublisher());
//            apartmentCategory.setText(String.valueOf(book.getBookEdition()));
//            bookQuantity.setText(String.valueOf(book.getBookQuantity()));
//            booksRemaining.setText(String.valueOf(book.getRemainingBooks()));
//            bookCreateBtn.setEnabled(false);
//            bookUpdateBtn.setEnabled(true);
//            bookDeleteBtn.setEnabled(true);
//            apartmentId.setEnabled(false);
//        }
//        else{
//            apartmentId.setText("");
//            apartmentAddress.setText("");
//            apartmentPrice.setText("");
//            apartmentMgmt.setText("");
//            apartmentCategory.setText("");
//            bookQuantity.setText("");
//            booksRemaining.setText("");
//            bookCreateBtn.setEnabled(true);
//            bookUpdateBtn.setEnabled(false);
//            bookDeleteBtn.setEnabled(false);
//        }

    }//GEN-LAST:event_BrokerTableMouseClicked

    private void BrokerCreateButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrokerCreateButtonMouseEntered
        // TODO add your handling code here:
        BrokerCreateButton.setBackground(new Color(0,0,0));
        BrokerCreateButton.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_BrokerCreateButtonMouseEntered

    private void BrokerCreateButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrokerCreateButtonMouseExited
        // TODO add your handling code here:
        BrokerCreateButton.setBackground(new Color(255,255,255));
        BrokerCreateButton.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_BrokerCreateButtonMouseExited

    private void BrokerCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrokerCreateButtonActionPerformed
        // TODO add your handling code here:
        UUID id = UUID.randomUUID();
        String firstName = empFirstName.getText();
        String lastName = empLastName.getText();
        Integer age = Integer.parseInt(empAge.getText());
        Double wage = Double.parseDouble(empWage.getText());
 
        
        BrokerBuilder brokerBuilder = new BrokerBuilder(id, age, firstName, lastName, wage);
        Broker broker = BrokerFactory.getInstance().getObject(brokerBuilder);
        
        brokerList.add((Broker) broker);
        String lineToFile = id + "," + firstName + "," + lastName + "," + age + "," + wage + "," + broker.getBonus();
        GeneralFileUtil.writeFile(EMP_FILE_NAME, lineToFile, false);
  
        empId.setText("");
        empFirstName.setText("");
        empLastName.setText("");
        empAge.setText("");
        empWage.setText("");

        populateBrokerTable();
    }//GEN-LAST:event_BrokerCreateButtonActionPerformed

    private void empFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empFirstNameActionPerformed

    private void empAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empAgeActionPerformed

    private void empWageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empWageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empWageActionPerformed

    private void empLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empLastNameActionPerformed

    private void empIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empIdActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_empIdActionPerformed

    private void empAgeErrorInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_empAgeErrorInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_empAgeErrorInputMethodTextChanged

    private void empAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_empAgeKeyReleased

    private void empAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empAgeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_empAgeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrokerCreateButton;
    private javax.swing.JTable BrokerTable;
    private javax.swing.JTextField empAge;
    private javax.swing.JLabel empAgeError;
    private javax.swing.JTextField empFirstName;
    private javax.swing.JTextField empId;
    private javax.swing.JTextField empLastName;
    private javax.swing.JTextField empWage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateBrokerTable(){
        
        DefaultTableModel model = (DefaultTableModel) BrokerTable.getModel();
        model.setRowCount(0);
        
        for(Broker broker : brokerList){
            Object[] row = new Object[6];
            
            String[] brokerString = broker.toString().split(",");
            
            for (int i = 0; i < brokerString.length; i++) {
                row[i] = brokerString[i];
            }
            
            model.addRow(row);
        }
    }
}
