/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.csye7374.views;

import edu.neu.csye7374.Management;
import edu.neu.csye7374.fileUtil.GeneralFileUtil;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class AddMgmtPanel extends javax.swing.JPanel {
    private List<Management> mgmtList = new ArrayList<>();
    private static AddMgmtPanel instance=null;

    private MainFrame mainFrameRef;
    private static String MFR_FILE_NAME = "MgmtData.csv"; 

        
    /**
     * Creates new form AddApartmentsPanel
     */
    public AddMgmtPanel() {
        initComponents();
        loadData();
    }
    
    public static AddMgmtPanel getInstance(){
        if(instance == null){
            instance= new AddMgmtPanel();
        }
        return instance;
    }

    private void loadData() {
        List<String> rawData = GeneralFileUtil.readFile(MFR_FILE_NAME);
        for (String line : rawData) {
            Management management = Management.getInstance();
            Management clone = management.clone();
            clone.setValues(line);
            mgmtList.add(clone);
        }
        
        populateMgmtTable();
    }
    
    void setMainFrame(MainFrame aThis) {
        this.mainFrameRef = aThis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mgmtTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        estYear = new javax.swing.JTextField();
        apartmentCreateBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mgmtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        apartmentsSold = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        mgmtTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "EST Year", "noOfApartmentsSold"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mgmtTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mgmtTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mgmtTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("EST Year");

        estYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estYearActionPerformed(evt);
            }
        });

        apartmentCreateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        apartmentCreateBtn.setText("Create");
        apartmentCreateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                apartmentCreateBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                apartmentCreateBtnMouseExited(evt);
            }
        });
        apartmentCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apartmentCreateBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        mgmtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mgmtNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Apartments Sold");

        apartmentsSold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apartmentsSoldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new Color(204, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Add Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apartmentsSold, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(estYear, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mgmtName, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(apartmentCreateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mgmtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apartmentsSold, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(estYear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32)
                .addComponent(apartmentCreateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(231, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mgmtTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mgmtTableMouseClicked
//        // TODO add your handling code here:
//        if(booksTable.getSelectedRow() != -1){
//            Book book = booksList.get(booksTable.getSelectedRow());
//            apartmentId.setText(book.getId());
//            apartmentAddress.setText(book.getBookName());
//            apartmentPrice.setText(book.getBookAuthor());
//            apartmentMgmt.setText(book.getBookPublisher());
//            apartmentCategory.setText(String.valueOf(book.getBookEdition()));
//            bookQuantity.setText(String.valueOf(book.getBookQuantity()));
//            booksRemaining.setText(String.valueOf(book.getRemainingBooks()));
//            bookCreateBtn.setEnabled(false);
//            bookUpdateBtn.setEnabled(true);
//            bookDeleteBtn.setEnabled(true);
//            apartmentId.setEnabled(false);
//        }
//        else{
//            apartmentId.setText("");
//            apartmentAddress.setText("");
//            apartmentPrice.setText("");
//            apartmentMgmt.setText("");
//            apartmentCategory.setText("");
//            bookQuantity.setText("");
//            booksRemaining.setText("");
//            bookCreateBtn.setEnabled(true);
//            bookUpdateBtn.setEnabled(false);
//            bookDeleteBtn.setEnabled(false);
//        }

    }//GEN-LAST:event_mgmtTableMouseClicked

    private void apartmentCreateBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apartmentCreateBtnMouseEntered
        // TODO add your handling code here:
        apartmentCreateBtn.setBackground(new Color(0,0,0));
        apartmentCreateBtn.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_apartmentCreateBtnMouseEntered

    private void apartmentCreateBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apartmentCreateBtnMouseExited
        // TODO add your handling code here:
        apartmentCreateBtn.setBackground(new Color(255,255,255));
        apartmentCreateBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_apartmentCreateBtnMouseExited

    private void apartmentCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apartmentCreateBtnActionPerformed
        // TODO add your handling code here:
        String name= mgmtName.getText();
        int noOfApartmentsSold = Integer.parseInt(apartmentsSold.getText());
        int establishedYear = Integer.parseInt(estYear.getText());

//        if(mgmtList.stream().map(mgmt -> mgmt.getApartmentId()).toList().contains("id")){
//            JOptionPane.showMessageDialog(this, "Apartment with this ID already exists");
//            return;
//        }
        Management manufact = Management.getInstance();
        Management man = manufact.clone();
        man.setManagementName(name)
           .setManufacturingYear(establishedYear)
           .setNoOfApartmentsReleased(noOfApartmentsSold);
        
        mgmtList.add(man);
        
        String lineToFile = name + "," + noOfApartmentsSold + "," + establishedYear;
        GeneralFileUtil.writeFile(MFR_FILE_NAME, lineToFile, false);
        
        mgmtName.setText("");
        apartmentsSold.setText("");
        estYear.setText("");
        

//        populateApartmentsList();
        populateMgmtTable();
    }//GEN-LAST:event_apartmentCreateBtnActionPerformed

    private void mgmtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mgmtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mgmtNameActionPerformed

    private void apartmentsSoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apartmentsSoldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apartmentsSoldActionPerformed

    private void estYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estYearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apartmentCreateBtn;
    private javax.swing.JTextField apartmentsSold;
    private javax.swing.JTextField estYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mgmtName;
    private javax.swing.JTable mgmtTable;
    // End of variables declaration//GEN-END:variables

    private void populateMgmtTable(){
        
        DefaultTableModel model = (DefaultTableModel) mgmtTable.getModel();
        model.setRowCount(0);
        
        for(Management mgmt : mgmtList){
            Object[] row = new Object[4];
            
            String[] mgmtString = mgmt.toString().split(",");
            
            for (int i = 0; i < 3; i++) {
                row[i] = mgmtString[i];
            }
            
            model.addRow(row);
        }
    }
}
